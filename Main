; Main.asm
; Continuously reads from x2600 making sure its not reading duplicate symbols.
; Processes the symbol based on the program description of mRNA processing.

	.ORIG x4000

; initialize the stack pointer
	LD R6, StckBtm

; global location where ISR puts character is initialized to 0
	AND R2, R2, #0
	STI R2, GLOB

; set up the keyboard interrupt vector table entry
	LD R1, KBISR
	STI R1, KBIVE 		; keyboard interrupt vector entry

; enable keyboard interrupts
	LD R1, KBIEN
	STI R1, KBSR

; start of actual program
	AND R1, R1, #0
	LEA R2, OUTP		; R2 <-- address of head of OUTP
LOOP	LDI R0, GLOB		; R0 <-- char
	BRz LOOP
	OUT
	ADD R1, R0, #0		; R1 <-- user typed char
	AND R0, R0, #0
	STI R0, GLOB
	

	BR LOOP

	HALT
NSA	.FILL 1
	.FILL 1
	.FILL 1
	.FILL 4
	.FILL 4
	.FILL 6
	.FILL 8
	.FILL 8
	.FILL -1
NSC	.FILL 0
	.FILL 0
	.FILL 0
	.FILL 4
	.FILL 4
	.FILL 4
	.FILL 4
	.FILL 4
	.FILL -1
NSG	.FILL 0
	.FILL 0
	.FILL 3
	.FILL 4
	.FILL 4
	.FILL 7
	.FILL 8
	.FILL 4
	.FILL -1
NSU	.FILL 0
	.FILL 2
	.FILL 0
	.FILL 5
	.FILL 5
	.FILL 5
	.FILL 5
	.FILL 5
	.FILL -1
OUTP	.FILL 0
	.FILL 0
	.FILL 0
	.FILL x7C
	.FILL 0
	.FILL 0
	.FILL 0
	.FILL 0
	.FILL -1
KBSR	.FILL xFE00
KBIEN	.FILL x4000
KBISR	.FILL x2000
KBIVE	.FILL x0180
StckBtm	.FILL x4000
GLOB	.FILL x2600
	.END

; ISR.asm
; Keyboard ISR runs when a key is struck.
; Checks for a valid RNA symbol and places it at x2600.

	.ORIG x2000
	ST R0, SVR0
	ST R1, SVR1
	LDI R0, KBDR	; R0 <-- user typed character

;is R0 = A?
	LD R1, NEGA
	ADD R1, R0, R1
	BRz VALID

;is R0 = C?
	LD R1, NEGC
	ADD R1, R0, R1
	BRz VALID

;is R0 = G?
	LD R1, NEGG
	ADD R1, R0, R1
	BRz VALID

;is R0 = U?
	LD R1, NEGU
	ADD R1, R0, R1
	BRz VALID
	BR DONE

VALID
	STI R0, STORE

DONE
	LD R0, SVR0
	LD R1, SVR1
	RTI

NEGA	.FILL x-41
NEGC	.FILL x-43
NEGG	.FILL x-47
NEGU	.FILL x-55
KBDR	.FILL xFE02
STORE	.FILL x2600
SVR0	.BLKW 1
SVR1	.BLKW 1
	.END
